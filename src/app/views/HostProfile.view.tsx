import { useCallback, useEffect, useState } from "react";
import { useSelector } from "react-redux";
import { useParams } from "react-router-dom"
import usePageTitle from "../../core/hooks/usePageTitle";
import { RootState } from "../../core/store";
import { Asset } from "../../sdk/@types/Asset";
import AssetService from "../../sdk/services/Asset.service";
import VulnerabilityService from "../../sdk/services/Vulnerability.service";
import HostProfile from "../features/HostProfile";
import HostVulnerabilitiesList from "../features/HostVulnerabilityList";
import Default from "../layouts/Default";

export default function HostProfileView () {

  const { hostId } = useParams ();

  usePageTitle(`Editor ${hostId}`)

  // resgata os dados do usuÃ¡rio logado do store do Redux
  const loggedUser = useSelector((state:RootState) => state.login)
  const [hostData, setHostData] = useState<Asset.Detailed>()


  
    const handleClick = useCallback( (props:Asset.VulnerabilityStatus) => {
      var response = {status: (!props.status) ? 1 : 0}
      VulnerabilityService
        .changeVulnerabilityStatus(props.vulnerability.id, hostData!.id, response, loggedUser.userToken)
      console.log(props)
    },[loggedUser.userToken, hostData])

  useEffect(() => {
    AssetService
      .getAssetDetail(Number(hostId), loggedUser.userToken)
      .then(setHostData)
  },[loggedUser.userToken, hostId, handleClick])

  if(!hostData)
    return null

  return <Default loggedUser={loggedUser}>
    <HostProfile hostData={hostData} />
    <HostVulnerabilitiesList handleClick={(props) => handleClick(props)} hostData={hostData} token={loggedUser.userToken} hostId= {Number(hostId)}/>
  </Default>
}