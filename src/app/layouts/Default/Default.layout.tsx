import * as DL from './Default.layout.styles'
import Navbar from '../../components/NavBar'
import Logo from '../../components/Logo'
import { useNavigate } from 'react-router-dom'
import { useDispatch } from 'react-redux'
import { RootState } from '../../../core/store'
import { useEffect } from 'react'
import SessionController from '../../components/SessionController'
import { addToken } from '../../../core/store/login.slice'


interface DefaultLayoutProps {
  children: React.ReactNode
  loggedUser: RootState['login']
}


function DefaultLayout (props: DefaultLayoutProps) {
  
  const navigate = useNavigate()
  const dispatch = useDispatch()
  
    //verifica se a propriedade isLogged é verdadeira. 
    //Caso não seja, manda o usuário para a página de login
    //Esta verificação ocorrerá em todas as páginas que não sejam a de login. Sor isso está no layout
      useEffect(()=> {
      if(!props.loggedUser.isLogged)
        navigate('/login')
      },[props.loggedUser.isLogged, navigate])

    function onLogout () {
      dispatch(addToken({
        isLogged:false,
        username:'',
        userToken:''
      }))
    }

  return <DL.Wrapper>
    <DL.Header>
    <Logo />
    </DL.Header>
    <DL.Main>
      <DL.Navigation>
        <Navbar />
      </DL.Navigation>
      <DL.FeaturedContent>
        {props.children}
      </DL.FeaturedContent>
      <DL.Aside>
        <SessionController
          name={props.loggedUser.username}
          description='Logged in'
          onLogout={onLogout}
        ></SessionController>
      </DL.Aside>
    </DL.Main>
  </DL.Wrapper>
}

export default DefaultLayout