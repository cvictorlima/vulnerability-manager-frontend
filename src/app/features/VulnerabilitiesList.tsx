import Icon from "@mdi/react";
import { mdiDesktopClassic } from '@mdi/js';
import { useEffect, useMemo, useState } from "react";
import { Column, useTable } from "react-table";
import styled from "styled-components";
import { Vulnerability } from "../../sdk/@types/Vulnerability";
import VulnerabilityService from "../../sdk/services/Vulnerability.service";
import Button from "../components/Button/Button";
import Table from "../components/Table/Table";


export interface VulnerabilitiesListProps {
  token: string
}

export default function VulnerabilitiesList ({token}:VulnerabilitiesListProps) {
  const [vulnData, setVulnData] = useState<Vulnerability.Summary>()
  const [showSeverityButton, setShowSeverityButton] = useState(false)
  const [severityValue, setSeverityValue] = useState(1)



  useEffect(() => {
    VulnerabilityService
      .getVulnerabilities(token)
      .then(setVulnData)
  },[token])

  function hostCountClick () {
    VulnerabilityService
      .getVulnerabilitiesOrdered(token)
      .then(setVulnData)
  }

  function idClick () {
    VulnerabilityService
    .getVulnerabilities(token)
    .then(setVulnData)
  }

  useEffect(()=>{
    VulnerabilityService
    .getVulnerabilityBySeverity(severityValue, token)
    .then(setVulnData)
  },[severityValue])
  
  
  // const data = useMemo<Asset.SummaryResult[]>(()=> hostData!.results,[hostData])


  const columns = useMemo<Column<Vulnerability.SummaryResult>[]>(
    () => [
      {
        Header: 'Id',
        accessor: 'id',
        Cell: (props) => <ListItem>{props.value}</ListItem>
      },
      {
        Header: 'Título',
        accessor: 'title',
        Cell: (props) => <p style={{paddingBottom: '5px'}} >{props.value}</p>
      },
      {
        Header: 'Severidade',
        accessor: 'severity',
        Cell: (props) => <ListItem>{props.value}</ListItem>
      },
      {
        Header: 'CVSS',
        accessor: 'cvss',
        Cell: (props) => <ListItem>{props.value}</ListItem>
      },
      {
        Header: 'Data de Publicação',
        accessor: 'publication_date',
        Cell: (props) => <ListItem>{props.value}</ListItem>
      },
      {
        Header: 'Nº de Hosts',
        accessor: 'asset_count',
        Cell: (props) => <ListItem>{props.value}</ListItem>
      },

    ],
    []
  )

  const instance = useTable<Vulnerability.SummaryResult>({data:vulnData?.results || [], columns})
  
  return<Wrapper>
    <Controller>
    <Session>
    <Description>Por Nº de Hosts:</Description>
    <button 
    onClick = {hostCountClick}
    >
      <Icon 
      size={1}
      color={'gray'}
      path={mdiDesktopClassic}
      />
    </button>
    </Session>
    <Session>
    <Description>Por Id:</Description>
    <Button 
    label='Por Id'
    variant="primary"
    onClick = {idClick}
    />
    </Session>
    <Session>
    <Description>Por Severidade:</Description>
    <Button 
    label='Baixa'
    variant="primary"
    onClick = {() => {setSeverityValue(1)}}
    />
    <Button 
    label='Média'
    variant="primary"
    onClick = {async () => {setSeverityValue(2)}}
    />
    <Button 
    label='Alta'
    variant="primary"
    onClick = {() => {setSeverityValue(3)}}
    />
    <CustomButton 
    onClick = {() => {setSeverityValue(4)}}
    >Crítica</CustomButton>
    </Session>
    </Controller>
    <Table instance = {instance} />
  </Wrapper> 
  // return <div>{token}</div>
}


const ListItem = styled.div`
display: flex;
flex-direction: column;
align-items: center;
`

const Controller = styled.div`
display: flex;
flex-direction: column;
gap: 12px;
`

const Wrapper = styled.div`
display: flex;
flex-direction: column;
gap: 20px;
`
const Description = styled.h4`
`

const Session = styled.div`
display: flex;
gap: 6px;
align-items: center;
`

const CustomButton = styled.button`

border: 0;
background-color: transparent;
font-family: 'Lato', sans-serif;
font-size: 1em;
font-weight: bold;
padding: 4px;
background-color: #ec2121;
opacity: 0.8;
:hover{
  opacity: 0.9;
  box-shadow: 2 2 blur;
  
}
`