import { useEffect, useMemo, useState } from "react";
import { Column, useTable } from "react-table";
import styled from "styled-components";
import { Vulnerability } from "../../sdk/@types/Vulnerability";
import VulnerabilityService from "../../sdk/services/Vulnerability.service";
import Table from "../components/Table/Table";
import VulnerabilityChart from "./VulnerabilityChart";
import PageSelector from "./PageSelectior";
import OrderingButtons from "./OrderingButtons";
import getFormatedDateOpt2 from "../../core/utils/getFormatedDateOpt2";

export interface VulnerabilitiesListProps {
  token: string
}

export default function VulnerabilitiesList ({token}:VulnerabilitiesListProps) {
  const [vulnData, setVulnData] = useState<Vulnerability.Summary>()
  const [search, setSearch] = useState<Vulnerability.Query>({
    page: undefined,
    severity: undefined,
    ordering: undefined
})

  useEffect(() => {
    VulnerabilityService
      .getVulnerabilities(token, search)
      .then(setVulnData)
  },[token, search])

  function handleOrdering (order:string) {
    setSearch((prev)=> ({...prev, ordering: order}))
  }
  
  function handleReset () {
    setSearch({severity: undefined, page: 1, ordering: undefined })    
  }
  
  function handlePageChange (page:number) {
    setSearch((prev)=> ({...prev, page: page}))    
  }
  
  function onSeverityClick (severity:number) {
    setSearch((prev)=> ({...prev, severity: severity, page: 1}))    
  }

  const columns = useMemo<Column<Vulnerability.SummaryResult>[]>(
    () => [
      {
        Header: 'Id',
        accessor: 'id',
        Cell: (props) => <ListItem>{props.value}</ListItem>
      },
      {
        Header: 'Título',
        accessor: 'title',
        Cell: (props) => <p style={{paddingBottom: '5px'}} >{props.value}</p>
      },
      {
        Header: 'Severidade',
        accessor: 'severity',
        Cell: (props) => <ListItem>{props.value}</ListItem>
      },
      {
        Header: 'CVSS',
        accessor: 'cvss',
        Cell: (props) => <ListItem>{props.value}</ListItem>
      },
      {
        Header: 'Data de Publicação',
        accessor: 'publication_date',
        Cell: (props) => <ListItem>{getFormatedDateOpt2(props.value!) || '-'}</ListItem>
      },
      {
        Header: 'Nº de Hosts',
        accessor: 'asset_count',
        Cell: (props) => <ListItem>{props.value}</ListItem>
      },

    ],
    []
  )

  const instance = useTable<Vulnerability.SummaryResult>({data:vulnData?.results || [], columns})
  
  return<Wrapper>
    <Top>
      <Head>
        <PageTitle>Lista de Vulnerabilidades</PageTitle>
      </Head>
      <ChartViewer>
            <VulnerabilityChart token={token} />
      </ChartViewer>
    </Top>
    <OrderingButtons handleOrdering={handleOrdering} handleReset={handleReset}  onSeverityClick={onSeverityClick}/>
    <PageSelector handlePageChange={handlePageChange} />
    <Table instance = {instance} />
    <PageSelector handlePageChange={handlePageChange} />
  </Wrapper> 
}


const ListItem = styled.div`
display: flex;
flex-direction: column;
align-items: center;
`

const ChartViewer = styled.div`
display: flex;
gap: 12px;
background-color: white;
padding: 20px;
justify-content: space-around;
align-items: center;
`

const Wrapper = styled.div`
display: flex;
flex-direction: column;
/* gap: 20px; */
`
const Head = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 20px;
  padding-bottom: 20px;
  padding-right: 40px;
  padding-left: 40px;
  background: rgb(2,0,36);
  background: linear-gradient(45deg, rgba(2,0,36,1) 0%, #1f0130 50%, #3b0242 100%);
`

const PageTitle = styled.h2`
  color: white;
`

const Top = styled.div`
`
