import { useCallback, useEffect, useMemo, useState } from "react";
import { Column, useTable } from "react-table";
import styled from "styled-components";
import { Asset } from "../../sdk/@types/Asset";
import VulnerabilityService from "../../sdk/services/Vulnerability.service";
import Button from "../components/Button/Button";
import Table from "../components/Table/Table";


export interface HostVulnerabilitiesListProps {
  hostData: Asset.Detailed
  token: string
  hostId: number
  handleClick:(props:Asset.VulnerabilityStatus)=>any
}

export default function HostVulnerabilitiesList ({hostData, token, hostId, handleClick}:HostVulnerabilitiesListProps) {
  const [buttonTheme, setButtonTheme] = useState ({}) 
  const [disable, setDisable] = useState(false)


  // function handleClick (props:Asset.VulnerabilityStatus, {token, hostId}:HostVulnerabilitiesListProps) {
  //   var response = {status: (!props.status) ? 1 : 0}
  //   VulnerabilityService
  //     .changeVulnerabilityStatus(props.vulnerability.id, hostId, response, token) 
  // }

  const columns = useMemo<Column<Asset.VulnerabilityStatus>[]>(
    () => [
      {
        Header: 'Id',
        id: '1',
        accessor: 'vulnerability',
        Cell: (props) => <ListItem>{props.value.id}</ListItem>
      },
      {
        Header: 'Título',
        id: '2',
        accessor: 'vulnerability',
        Cell: (props) => <p style={{paddingBottom:'5px' }}>{props.value.title}</p>
      },
      {
        Header: 'Severidade',
        id: '3',
        accessor: 'vulnerability',
        Cell: (props) => <ListItem>{props.value.severity}</ListItem>
      },
      {
        Header: 'CVSS',
        id: '4',
        accessor: 'vulnerability',
        Cell: (props) => <ListItem>{props.value.cvss}</ListItem>
      },
      {
        Header: 'Data de Publicação',
        id: '5',
        accessor: 'vulnerability',
        Cell: (props) => <ListItem>{props.value.publication_date || '-'}</ListItem>
      },
      {
        Header: 'Status',
        id: '6',
        accessor: 'status',
        Cell: (props) => <Button 
        style={{}}
        label= { (props.value === 0) ? 'Inativa' : 'Ativa'} 
        variant= { (props.value === 0) ? 'primary' : 'danger'}
        disabled= {!!onclick}
        onClick = {()=>handleClick(props.row.original)}
        // var value = props.value
        // var response = (!value) ? 1 : 0
        // useEffect(()=> {
        //   VulnerabilityService
        //     .changeVulnerabilityStatus(props.row.original.vulnerability.id, hostId, response , token )
        // },[response])
        />
        
      },
    ],
    []
  )

  const instance = useTable<Asset.VulnerabilityStatus>({data:hostData.vulnerabilities || [], columns})
  
  return <Table instance = {instance} />
  // return <div>{token}</div>
}


const ListItem = styled.div`
display: flex;
flex-direction: column;
align-items: center;
`