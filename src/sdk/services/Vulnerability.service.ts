import Service from "../Service";


class VulnerabilityService extends Service {
  static getVulnerabilities (token: string) {
    return this.Http
      .get('/api/vulnerabilities/', { headers: { Authorization: token }})
      .then 
  }

  static changeVulnerabilityStatus (
    vulnerabilityID: number, assetId: number, vulnStatus: 1 | 0, token:string
  ) {
    return this.Http
      .patch(`/api/vulnerability/${vulnerabilityID}/asset/${assetId}/update`, vulnStatus, 
        { headers: { Authorization: token }})
      .then(this.getData)
  }

  static getVulnerabilityByAsset (assetId: number, token: string) {
    return this.Http
      .get(`/api/vulnerabilities/?asset=${assetId}`, { headers: { Authorization: token }})
      .then(this.getData)
  }

  static getVulnerabilityBySeverity (severityLevel: 1 | 2 | 3 | 4, token: string) {
    return this.Http
      .get(`/api/vulnerabilities/?severity=${severityLevel}`, 
        { headers: { Authorization: token }})
      .then(this.getData)
  }
  
  static getVulnerabilitiesByAssetCount (token: string) {
    return this.Http
      .get(`/api/vulnerabilities/?ordering=-asset_count`, { headers: { Authorization: token }})
      .then(this.getData)
  }
}

export default VulnerabilityService